name: CI

on: [push]

jobs:
  composer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Composer install
        uses: php-actions/composer@v6
        with:
          php_version: 8.1

      - name: Archive build
        run: mkdir /tmp/github-actions/ && tar -cvf /tmp/github-actions/build.tar ./

      - name: Upload build archive for test runners
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: /tmp/github-actions

  phpunit:
    runs-on: ubuntu-latest
    needs: [composer]

    outputs:
      coverage: ${{ steps.coverage.outputs.coverage_text }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: /tmp/github-actions

      - name: Extract build archive
        run: tar -xvf /tmp/github-actions/build.tar ./

      - name: PHP Unit tests
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: cover
        with:
          php_version: 8.1
          php_extensions: xdebug
          configuration: test/phpunit/phpunit.xml
          bootstrap: vendor/autoload.php
          args: --coverage-text=test/phpunit/_coverage.txt

      - name: Store coverage data
        id: coverage
        run: |
          echo "coverage_text<<EOF" >> $GITHUB_OUTPUT
          cat test/phpunit/_coverage.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  coverage:
    runs-on: ubuntu-latest
    needs: [phpunit]
    steps:
      - run: |
          echo "Here's the coverage from the other job:"
          echo ${{ steps.phpunit.outputs.coverage }}          

  phpstan:
    runs-on: ubuntu-latest
    needs: [composer]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: /tmp/github-actions

      - name: Extract build archive
        run: tar -xvf /tmp/github-actions/build.tar ./

      - name: PHP Static Analysis
        uses: php-actions/phpstan@v3
        with:
          path: src/

  remove_old_artifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Remove old artifacts for prior workflow runs on this repository
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api "/repos/${{ github.repository }}/actions/artifacts?name=build-artifact" | jq ".artifacts[] | select(.name == \"build-artifact\") | .id" > artifact-id-list.txt
          while read id
          do
            echo -n "Deleting artifact ID $id ... "
            gh api --method DELETE /repos/${{ github.repository }}/actions/artifacts/$id && echo "Done"
          done <artifact-id-list.txt
